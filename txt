$self->set_host_state( $self->{_hosts}->{$hostname}, "waiting" )

Andy:
    callback takes continuation and error continuation

    Engine: 
    - fetch from zookeeper
    - 

xxx:

    /pogo
      /ns/<blah>
          env (current executing environment)
            <slots> = <app,envkey, envalue>
                 (hosts occupying slot)
                 host
                 ...

         /conf/ 
            app/
              <env_k>: N or % (constraint)

    /pogo
      /job
          /p0000..../
             hosts/
               (hosts of this job)
               host: state (i.e. indicates of done)
               lock/
               ....
               log/
               meta/
                 submitter: user_id

envkey: "colo"
envval: "sp1", "ac4" ...

* goes through job/ list of hosts not complete already
* goes to namespace /conf/
* zookeeper get children in slot

* grabs the env role, does its own intersection.

* culpa: metadata associated role names
  - mail.set = farm13, colo, mud

* Namespace core algorithm

Plugin API

* new

(rolesdb, culpa, 

* batched rolesdb calls:

    - xset.role => 
       host1
       host2  => app roles, env roles, cm3, crap
              => tagged in namespace
       hostN

namespace: first part of dotted name. 

culpa: 60k
    - mail.base = app role
    - mail.env
          role1:
             k1: v1
             k2: v2
          role2:
             k1: v1
             k2: v2
    - or ignore

* e.g. env role: mail.farm.set.sp1-prod-500
    colo: sp1
    farm: 500

* Appgroups
  - in namespace configuration 
  - mapping roles shortcuts to roles
  - lives yaml (uploaded to zookeeper?)

* OS: Zookeeper stores config?

* Job.pm: job_start: 
  -y: fetches roles 
  -

* fetch_roles: also does culpa

  pogo/server/lib/Pogo/Server/Job.pm line 430
  pogo/server/lib/Pogo/Server.pm:447
